"""Add sport_type and scoring_type to Event

Revision ID: d36e2219443d
Revises:
Create Date: 2025-10-07 12:01:52.623592

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d36e2219443d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "referee",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("password", sa.String(length=100), nullable=False),
        sa.Column("position", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("competition_id", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["competition.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "timer_log",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("competition_id", sa.Integer(), nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.Column("flight_id", sa.Integer(), nullable=True),
        sa.Column("athlete", sa.String(length=120), nullable=True),
        sa.Column("action", sa.String(length=32), nullable=False),
        sa.Column("start_ts", sa.DateTime(timezone=True), nullable=True),
        sa.Column("stop_ts", sa.DateTime(timezone=True), nullable=True),
        sa.Column("duration_sec", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("meta_json", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["competition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.ForeignKeyConstraint(
            ["flight_id"],
            ["flight.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("competition_type")
    op.drop_table("workout_exercise")
    op.drop_table("lift")
    op.drop_table("workout")
    op.drop_table("exercise")
    op.drop_table("sport_category")
    with op.batch_alter_table("athlete", schema=None) as batch_op:
        batch_op.alter_column(
            "competition_id", existing_type=sa.INTEGER(), nullable=True
        )

    with op.batch_alter_table("athlete_entry", schema=None) as batch_op:
        batch_op.add_column(sa.Column("event_id", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("flight_id", sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column("lift_type", sa.String(length=50), nullable=False)
        )
        batch_op.add_column(
            sa.Column("attempt_time_limit", sa.Integer(), nullable=True)
        )
        batch_op.add_column(sa.Column("break_time", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("default_reps", sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column("reps", sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column("opening_weights", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("entry_config", sa.JSON(), nullable=True))
        batch_op.alter_column("entry_order", existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_unique_constraint(
            "uq_athlete_flight_lift", ["athlete_id", "flight_id", "lift_type"]
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "flight", ["flight_id"], ["id"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(None, "athlete_flight", ["entry_order"], ["order"])
        batch_op.create_foreign_key(None, "event", ["event_id"], ["id"])
        batch_op.drop_column("competition_type_id")

    with op.batch_alter_table("athlete_flight", schema=None) as batch_op:
        batch_op.add_column(sa.Column("order", sa.Integer(), nullable=True))

    with op.batch_alter_table("attempt", schema=None) as batch_op:
        batch_op.add_column(sa.Column("athlete_id", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("flight_id", sa.Integer(), nullable=False))
        batch_op.add_column(
            sa.Column("movement_type", sa.String(length=50), nullable=True)
        )
        batch_op.add_column(sa.Column("status", sa.String(length=20), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "fk_attempt_athlete_entry_id",
            "athlete_entry",
            ["athlete_entry_id"],
            ["id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "fk_attempt_athlete_id", "athlete", ["athlete_id"], ["id"]
        )
        batch_op.create_foreign_key(
            "fk_attempt_flight_id", "flight", ["flight_id"], ["id"], ondelete="CASCADE"
        )
        batch_op.drop_column("lift_id")

    with op.batch_alter_table("competition", schema=None) as batch_op:
        batch_op.drop_column("sport_type")
        batch_op.drop_column("end_date")

    with op.batch_alter_table("event", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "sport_type",
                sa.Enum(
                    "OLYMPIC_WEIGHTLIFTING",
                    "POWERLIFTING",
                    "CROSSFIT",
                    "HYROX",
                    name="sporttype",
                ),
                nullable=False,
            )
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("current_lift_id")

    with op.batch_alter_table("flight", schema=None) as batch_op:
        batch_op.add_column(sa.Column("competition_id", sa.Integer(), nullable=True))
        batch_op.add_column(
            sa.Column("movement_type", sa.String(length=50), nullable=True)
        )
        batch_op.alter_column("event_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.create_foreign_key(None, "competition", ["competition_id"], ["id"])

    with op.batch_alter_table("referee_assignment", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("competition_type_id")

    with op.batch_alter_table("timer", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("competition_type_id")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("timer", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("competition_type_id", sa.INTEGER(), nullable=False)
        )
        batch_op.create_foreign_key(
            None, "competition_type", ["competition_type_id"], ["id"]
        )

    with op.batch_alter_table("referee_assignment", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("competition_type_id", sa.INTEGER(), nullable=False)
        )
        batch_op.create_foreign_key(
            None, "competition_type", ["competition_type_id"], ["id"]
        )

    with op.batch_alter_table("flight", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column("event_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.drop_column("movement_type")
        batch_op.drop_column("competition_id")

    with op.batch_alter_table("event", schema=None) as batch_op:
        batch_op.add_column(sa.Column("current_lift_id", sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(None, "lift", ["current_lift_id"], ["id"])
        batch_op.drop_column("sport_type")

    with op.batch_alter_table("competition", schema=None) as batch_op:
        batch_op.add_column(sa.Column("end_date", sa.DATE(), nullable=True))
        batch_op.add_column(
            sa.Column("sport_type", sa.VARCHAR(length=21), nullable=False)
        )

    with op.batch_alter_table("attempt", schema=None) as batch_op:
        batch_op.add_column(sa.Column("lift_id", sa.INTEGER(), nullable=False))
        batch_op.drop_constraint("fk_attempt_flight_id", type_="foreignkey")
        batch_op.drop_constraint("fk_attempt_athlete_id", type_="foreignkey")
        batch_op.drop_constraint("fk_attempt_athlete_entry_id", type_="foreignkey")
        batch_op.create_foreign_key(None, "lift", ["lift_id"], ["id"])
        batch_op.create_foreign_key(None, "athlete_entry", ["athlete_entry_id"], ["id"])
        batch_op.drop_column("status")
        batch_op.drop_column("movement_type")
        batch_op.drop_column("flight_id")
        batch_op.drop_column("athlete_id")

    with op.batch_alter_table("athlete_flight", schema=None) as batch_op:
        batch_op.drop_column("order")

    with op.batch_alter_table("athlete_entry", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("competition_type_id", sa.INTEGER(), nullable=False)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "competition_type", ["competition_type_id"], ["id"]
        )
        batch_op.drop_constraint("uq_athlete_flight_lift", type_="unique")
        batch_op.alter_column("entry_order", existing_type=sa.INTEGER(), nullable=True)
        batch_op.drop_column("entry_config")
        batch_op.drop_column("opening_weights")
        batch_op.drop_column("reps")
        batch_op.drop_column("default_reps")
        batch_op.drop_column("break_time")
        batch_op.drop_column("attempt_time_limit")
        batch_op.drop_column("lift_type")
        batch_op.drop_column("flight_id")
        batch_op.drop_column("event_id")

    with op.batch_alter_table("athlete", schema=None) as batch_op:
        batch_op.alter_column(
            "competition_id", existing_type=sa.INTEGER(), nullable=False
        )

    op.create_table(
        "sport_category",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "exercise",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("sport_category_id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("order", sa.INTEGER(), nullable=False),
        sa.Column("attempt_time_limit", sa.INTEGER(), nullable=True),
        sa.Column("break_time_default", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["sport_category_id"],
            ["sport_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workout",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("date", sa.DATE(), nullable=True),
        sa.Column("notes", sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lift",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("event_id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("order", sa.INTEGER(), nullable=False),
        sa.Column("max_attempts", sa.INTEGER(), nullable=True),
        sa.Column("attempt_time_seconds", sa.INTEGER(), nullable=True),
        sa.Column("break_time_seconds", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workout_exercise",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("workout_id", sa.INTEGER(), nullable=False),
        sa.Column("sets", sa.INTEGER(), nullable=True),
        sa.Column("reps", sa.INTEGER(), nullable=True),
        sa.Column("weight", sa.FLOAT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workout_id"],
            ["workout.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "competition_type",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("exercise_id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercise.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("timer_log")
    op.drop_table("referee")
    # ### end Alembic commands ###
